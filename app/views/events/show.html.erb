<% content_for :title, "Gamehedge - " + @event.name %>
        <div class="view-container" ng-controller="EventController">
            <div class="view-frame animate-view">
                <div id="home" class="event-container">
  
                      <section id="game_info">
                        <div class="row max-container-width">
                          <div class="col-md-3 col-xs-12 ggg-logo vertical-center hidden-xs hidden-sm">
                              <img src="<%= image_url "badge-gamehedge.png" %>" alt="GameHedge" />
                              Your tickets come with the<br>
                              GOOD GAME GUARANTEE!
                          </div>
                          <div class="col-md-5 col-xs-12 moto vertical-center hidden-xs hidden-sm">
                            
                            <div class="col-md-2 date-holder hidden-xs hidden-sm">
                              <p class="date1">{{event.occurs_at | date:'MMM': 'UTC' | uppercase}}</p>
                              <p class="date2">{{event.occurs_at | date:'dd' : 'UTC'| uppercase}}</p>
                              <p class="date3">{{event.occurs_at | date:'EEE': 'UTC' | uppercase}}</p>  
                            </div>
                            <div class="col-md-10 col-xs-12 event-info vertical-center mobile-event-info hidden-xs hidden-sm">
                              <span class="mobile-event-span">
                                <!-- <p class="first-line desktop-event-name"><span class="blue-span">{{event.away_performer.name}}</span><span class="at"> at </span><span class="blue-span">{{event.home_performer.name}}</span></p> -->
                                <p class="first-line desktop-event-name"><span class="blue-span">{{event.name}}</span></p>
                                <p class="second-line" ng-if="(event.occurs_at | date:'hh:mm:ss' : 'UTC') != (compareDate | date:'hh:mm:ss' : 'UTC')">{{event.occurs_at | date:'hh:mm a' : 'UTC'| uppercase}} at <span class="blue-span">{{event.venue.name}}</span> - {{event.location}}</p>
                                <p class="second-line" ng-if="(event.occurs_at | date:'hh:mm:ss' : 'UTC') == (compareDate | date:'hh:mm:ss' : 'UTC')">TBD at <span class="blue-span">{{event.venue.name}}</span> - {{event.location}}</p>
                              </span>
                            </div>
                              
                          </div>
                          <div class="col-md-4 col-xs-12 mobile-event-container" style="height: 100%;">
                            
                            <div class="hidden-xs hidden-sm ggg-event vertical-center">
                                All GameHedge tickets come with our exclusive Good Game Guarantee at no additional cost. So, if the home team loses by {{event.home_performer.sport.ggg}} or more, we will refund 50% of the price of your ticket. No gimmicks. No catches.  
                            </div>
                              
                              
                            <div class="col-md-10 col-xs-12 event-info vertical-center mobile-event-info hidden-md hidden-lg hidden-xl">
                               <div class="mobile-top-bt">
                                    <button type="button" class="navbar-toggle" data-toggle="offcanvas" data-target="#slideMenu" data-canvas="body" ng-click="showSlideMain()">
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                        <span class="icon-bar"></span>
                                    </button>
                               </div>
                                
                              <span class="mobile-event-span">
                                <!-- <p class="first-line"><span class="blue-span">{{event.away_performer.name}}</span><span class="at"> at </span><span class="blue-span">{{event.home_performer.name}}</span></p> -->
                                <p class="first-line"><span class="blue-span">{{event.name}}</span></p>
                                <p class="second-line capitalize" ng-if="(event.occurs_at | date:'hh:mm:ss' : 'UTC') != (compareDate | date:'hh:mm:ss' : 'UTC')">{{event.occurs_at | date:'EEE, MMM dd hh:mm a' : 'UTC'}} at <span class="blue-span">{{event.venue.name}}</span></p>
                                <p class="second-line capitalize" ng-if="(event.occurs_at | date:'hh:mm:ss' : 'UTC') == (compareDate | date:'hh:mm:ss' : 'UTC')">{{event.occurs_at | date:'EEE, MMM dd' : 'UTC'}} TBD at <span class="blue-span">{{event.venue.name}}</span></p>
                              </span>
                            </div>  
                              
                          </div>
                        </div>
                      </section>
                        
                      <div id="filters_prev_mobile" ng-if="prev_filter" class="zipper hidden-md hidden-lg hidden-xl">
                        
                        <div class="close_mobile_x" ng-click="closePrevFilter()">
                            <img width="15px" src="<%= image_url 'close-menu-black.png' %>">
                        </div>
                        <div class="how_prev_filter">HOW MANY TICKETS?</div>
                        <div class="row text-center">
                          <div class="filter_prev_number" ng-click="updateFilter(1)">1</div>
                          <div class="filter_prev_number" ng-click="updateFilter(2)">2</div>
                          <div class="filter_prev_number" ng-click="updateFilter(3)">3</div>
                        </div>
                        <div class="row text-center">
                          <div class="filter_prev_number" ng-click="updateFilter(4)">4</div>
                          <div class="filter_prev_number" ng-click="updateFilter(5)">5+</div>
                        </div>
                      </div>

                      <div id="filters_mobile" ng-if="filter_active" class="zipper">
                        <div class="close_mobile_x" ng-click="closeFilter()">
                            <img width="15px" src="<%= image_url 'close-menu-black.png' %>">
                        </div>
                        
                        <div class="filters-mobile">
                            <div class="col-xs-12 text-center filter-title">
                                PRICE RANGE?
                            </div>
                            <div class="col-xs-12 filter-row filter-buttons text-center">  
                                <button class="price_filter_bt" ng-class="{'active': mob_price_a == true}" ng-click="mob_price_update(1)">$1-$100</button>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_b == true}" ng-click="mob_price_update(2)">$100-$200</button>
                                <br/>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_c == true}" ng-click="mob_price_update(3)">$200-$300</button>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_d == true}" ng-click="mob_price_update(4)">$300+</button>
                            </div>
                            <div class="col-xs-12 filter-divisor">
                                <hr>
                            </div>
                            <div class="col-xs-12 text-center filter-title">
                                HOW MANY TICKETS?
                            </div>
                            <div class="col-xs-12 filter-row filter-buttons text-center">  
                                <button ng-class="{'active': mob_index == 0}" ng-click="updateMobFilter(0)">Any</button>
                                <button ng-class="{'active': mob_index == 1}" ng-click="updateMobFilter(1)">1</button>
                                <button ng-class="{'active': mob_index == 2}" ng-click="updateMobFilter(2)">2</button>
                                <button ng-class="{'active': mob_index == 3}" ng-click="updateMobFilter(3)">3</button>
                                <button ng-class="{'active': mob_index == 4}" ng-click="updateMobFilter(4)">4</button>
                                <button ng-class="{'active': mob_index == 5}" ng-click="updateMobFilter(5)">5+</button>
                            </div>
                            <div class="col-xs-12 filter-divisor">
                                <hr>
                            </div>
                            
                            <div class="col-xs-12 text-center filter-title">
                                SHOW
                            </div>
                            
                            <div class="col-xs-12 filter-row text-center">
                                <button ng-class="{'active': mob_delivery == 0}" ng-click="updateMobDelivery(0)">Tickets Only</button>
                                <button ng-class="{'active': mob_delivery == 1}" ng-click="updateMobDelivery(1)">Parking Only</button>
                                <!--button ng-class="{'active': mob_eticket == true}" ng-click="updateMobEticket()">EDelivery</button-->
                            </div>
                            
                            <div class="show-button" ng-click="showMobFilters()">
                                SHOW RESULTS
                            </div>

                        </div>
                        
                      </div>
                        
                      <div id="detail_mobile" ng-if="displayDetail" class="zipper">
                        <div class="close_mobile_x" ng-click="closeDetail()">
                            <img width="15px" src="<%= image_url 'close-menu-black.png' %>">
                        </div>
                          
                        <div class="detail_title">ORDER DETAILS</div>
                        <div ng-if="sectionUrl != ''">
                            <img width="100%" ng-src="{{sectionUrl}}">
                        </div>
                        <div class="row detail-content first-detail">
                            <div class="col-xs-7">
                                <p class="subtitle">Section</p>
                                <p class="content">{{selectedTicket.section}}</p>
                            </div>
                            <div class="col-xs-5">
                                <p class="subtitle">Row</p>
                                <p class="content">{{selectedTicket.row}}</p>
                            </div>
                            <div class="col-xs-12 notes">
                                {{selectedTicket.public_notes}}
                            </div>
                        </div>
                        <div class="col-xs-12 filter-divisor">
                            <hr>
                        </div>
                        <div class="row detail-content">
                            <div class="col-xs-12 subtitle">
                                <strong>DELIVERY {{selectedTicket.format}}</strong>
                            </div>
                            <div class="col-xs-12 msg" ng-if="selectedTicket.format == 'Eticket'">
                                Email Delivery
                            </div>
                            <div class="col-xs-12 msg" ng-if="selectedTicket.format == 'Physical'">
                                Physical Delivery
                            </div>
                        </div>
                        <div class="col-xs-12 filter-divisor">
                            <hr>
                        </div>
                        <div class="row detail-content">
                            <div class="col-xs-7">
                                <p class="subtitle">Ticket Price</p>
                                <p class="content price">{{selectedTicket.retail_price | currency : '$' : 2 }}</p>
                                <p class="msg">each</p>
                            </div>
                            <div class="col-xs-5">
                                <p class="subtitle">Number of tickets</p>
                                <p class="content">{{selectedTicket.amount}} tickets</p>
                            </div>
                        </div>
                        
                        <div class="show-button go-checkout" ng-click="goToCheckout()">
                            GO TO CHECKOUT
                        </div>
                      </div>
                        
                      <script type="text/ng-template" id="typeahead/bind-node.html">
                        <a href="#" tabindex="-1" ng-bind-html="match.label | uibTypeaheadHighlight:query"></a>
                      </script>
                      <section id="tickets-map" class="max-container-width">
                        <div class="row">
                          <div class="col-md-8">
                            <div class="map-container">
                              <span class="glyphicon glyphicon-zoom-in hidden-xs hidden-sm" aria-hidden="true" ng-click="zoomIn()"></span>
                              <span class="glyphicon glyphicon-zoom-out hidden-xs hidden-sm" aria-hidden="true" ng-click="zoomOut()"></span>
                              <div id="MapContainer">
                               
                              </div>
                            </div>
                          </div>
                          <div class="col-md-4 tickets">
                            <div class="filters">
                                
                              <div class="col-xs-12 filter-row vertical-center hidden-xs hidden-sm">
                                Price range
                                <button class="price_filter_bt" ng-class="{'active': mob_price_a_real == true}" ng-click="mob_price_update_real(1)">$1-$100</button>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_b_real == true}" ng-click="mob_price_update_real(2)">$100-$200</button>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_c_real == true}" ng-click="mob_price_update_real(3)">$200-$300</button>
                                <button class="price_filter_bt" ng-class="{'active': mob_price_d_real == true}" ng-click="mob_price_update_real(4)">$300+</button>
                                
                              </div>    
                                
                              <div class="col-xs-12 filter-row vertical-center hidden-xs hidden-sm">
                                Quantity
                                <button ng-class="{'active': index == 0}" ng-click="updateFilter(0)">Any</button>
                                <button ng-class="{'active': index == 1}" ng-click="updateFilter(1)">1</button>
                                <button ng-class="{'active': index == 2}" ng-click="updateFilter(2)">2</button>
                                <button ng-class="{'active': index == 3}" ng-click="updateFilter(3)">3</button>
                                <button ng-class="{'active': index == 4}" ng-click="updateFilter(4)">4</button>
                                <button ng-class="{'active': index == 5}" ng-click="updateFilter(5)">5+</button>
                              </div>
                              <div class="col-xs-12 filter-row vertical-center hidden-xs hidden-sm">
                                Show
                                <button ng-click="updateParking(false)" ng-class="{'active': !onlyParking}"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Tickets Only</button>
                                <button ng-click="updateParking(true)" ng-class="{'active': onlyParking}"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Parking Only</button>
                                <!--button ng-click="updateEtickets()" ng-class="{'active': etickets}"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> EDelivery</button-->
                               <!--  <button ng-click="updateFilter($event,1)"><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Parking Only</button> -->
                              </div>
                              <div class="col-xs-12 section-image hidden-xs hidden-sm" ng-if="sectionUrl != ''">
                                <img ng-src="{{sectionUrl}}">
                              </div>




                              <div class="col-xs-12 filter-header">
                                <div class="row full-height">
                                  <div class="col-xs-1 hidden" ng-click="openFilter()"><img width="20px" src="<%= image_url 'filter_icon.png' %>"></div>
                                  <div class="col-xs-3 col-md-4 vertical-center horizontal-center sorting full-height" ng-click="updateSort('section')">
                                    Section <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                                  </div>
                                  <div class="hidden-xs hidden-sm col-xs-2 vertical-center horizontal-center sorting full-height" ng-click="updateSort('row')">
                                    Row <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                                  </div>
                                  <div class="hidden-md hidden-lg hidden-xl col-xs-2 vertical-center horizontal-center sorting full-height">
                                    Row
                                  </div>
                                  <div class="col-xs-3 col-md-2 vertical-center horizontal-center full-height">
                                    Quantity
                                  </div>
                                  <div class="hidden-xs hidden-sm col-xs-4 vertical-center horizontal-center sorting full-height" ng-click="updateSort('retail_price')">
                                    Price <span class="glyphicon glyphicon-triangle-bottom" aria-hidden="true"></span>
                                  </div>
                                  <div class="hidden-md hidden-lg hidden-xl col-xs-4 vertical-center horizontal-center sorting full-height">
                                    <button class="mobile_filter_bt" ng-click="openFilter()">Filters</button>
                                  </div>
                                </div>
                              </div>



                              <div id="home-loading-data" class="col-xs-12 horizontal-center" ng-if="loading">
                                <div class='uil-default-css' style='transform:scale(0.32);'><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(0deg) translate(0,-60px);transform:rotate(0deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(30deg) translate(0,-60px);transform:rotate(30deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(60deg) translate(0,-60px);transform:rotate(60deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(90deg) translate(0,-60px);transform:rotate(90deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(120deg) translate(0,-60px);transform:rotate(120deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(150deg) translate(0,-60px);transform:rotate(150deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(180deg) translate(0,-60px);transform:rotate(180deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(210deg) translate(0,-60px);transform:rotate(210deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(240deg) translate(0,-60px);transform:rotate(240deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(270deg) translate(0,-60px);transform:rotate(270deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(300deg) translate(0,-60px);transform:rotate(300deg) translate(0,-60px);border-radius:10px;position:absolute;'></div><div style='top:80px;left:93px;width:14px;height:40px;background:#000000;-webkit-transform:rotate(330deg) translate(0,-60px);transform:rotate(330deg) translate(0,-60px);border-radius:10px;position:absolute;'></div></div>
                              </div>
                                
                              <div class="col-xs-12 tickets-data" id="tickets_list">
                              
                              </div>
                            </div>
                          </div>
                        </div>
                      </section>
                      
                    </div>

            </div>
        </div>
  

<%= stylesheet_link_tag 'ladda-themeless.min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'angular.min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'jquery.tuMap-min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'angular-animate.min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'spin.min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'ladda.min', 'data-turbolinks-track' => true %>
<%= javascript_include_tag 'angular-ladda.min', 'data-turbolinks-track' => true %>
        
<script>
    $(document).ready(function(){
      $("#head-container").addClass("dark-header");
      $("footer").addClass("hidden");
    })
    app = angular.module('gamehedge',[
        
        'angular-ladda',
        
    ])

    app.filter('numberOfSeats', function() {
      return function(input,numSeats) {
        input = input || '';
        var out = [];
        if(numSeats == 0){
            out = input;
        }
        else if(numSeats == 5){
            angular.forEach(input, function(value, key) {
                //console.log("Section "+value.section+" Row "+value.row);
                var keepGoing = true;
                angular.forEach(value.splits, function(value2, key2) {
                    if(value2 >= 5 && keepGoing == true){
                        out.push(value);
                        keepGoing = false;
                    }
                });
            });
        }
        else{
            angular.forEach(input, function(value, key) {
                if(value.splits.indexOf(numSeats) != -1){
                    out.push(value);
                }   
            });
        }
        return out;
      };
    })
    app.directive('emitLastRepeaterElement', function() {
        return function(scope) {
            if (scope.$last){
                scope.$emit('LastRepeaterElement');
            }
        };
    })
    app.directive('scrolly', function () {
        return {
            restrict: 'A',
            link: function (scope, element, attrs) {
                var raw = element[0];
                //console.log('loading directive');
                    
            }
        };
    })
    app.service('apiService', function($http) {
    
        this.getData = function( url ) {
            var request = $http({
                method: "get",
                url: url,
                params: {
                    action: "get"
                },
                headers: {
                   'Authorization': 'Token token="TokenHere"'
                },
            });
            return( request.then( handleSuccess, handleError ) );
        }
        
        this.postData = function(url, params) {
            var request = $http({
                method: "POST",
                url: url,
                data: params,
                headers: {
                   'Authorization': 'Token token="TokenHere"'
                },
            });
            return( request.then( handleSuccess, handleError ) );
        }

        this.putData = function(url, params) {
            var request = $http({
                method: "PUT",
                url: url,
                data: params,
                headers: {
                   'Authorization': 'Token token="TokenHere"'
                },
            });
            return( request.then( handleSuccess, handleError ) );
        }

        this.patchData = function(url, params) {
            var request = $http({
                method: "PATCH",
                url: url,
                data: params,
                headers: {
                   'Authorization': 'Token token="TokenHere"'
                },
            });
            return( request.then( handleSuccess, handleError ) );
        }

        this.deleteData = function(url, params) {
            var request = $http({
                method: "DELETE",
                url: url,
                headers: {
                   'Authorization': 'Token token="TokenHere"'
                },
            });
            return( request.then( handleSuccess, handleError ) );
        }

        
        function handleError( response ) {
            // The API response from the server should be returned in a
            // nomralized format. However, if the request was not handled by the
            // server (or what not handles properly - ex. server error), then we
            // may have to normalize it on our end, as best we can.
            if (
                ! angular.isObject( response.data ) ||
                ! response.data.message
                ) {
                return("An unknown error occurred.");
            }
            // Otherwise, use expected error message.
            return(response.data.message);
        }
        // I transform the successful response, unwrapping the application data
        // from the API response payload.
        function handleSuccess( response ) {
            return( response.data );
        }
    })
    app.service('dataService', function($http) {
        
        this.getData = function( url ) {
            var request = $http({
                method: "get",
                url: url,
                params: {
                    action: "get"
                }
            });
            return( request.then( handleSuccess, handleError ) );
        }
        
        this.postData = function(url, params) {
            var request = $http({
                method: "POST",
                url: url,
                data: params
            });
            return( request.then( handleSuccess, handleError ) );
        }
        
        function handleError( response ) {
            // The API response from the server should be returned in a
            // nomralized format. However, if the request was not handled by the
            // server (or what not handles properly - ex. server error), then we
            // may have to normalize it on our end, as best we can.
            if (
                ! angular.isObject( response.data ) ||
                ! response.data.message
                ) {
                return( $q.reject( "An unknown error occurred." ) );
            }
            // Otherwise, use expected error message.
            return( $q.reject( response.data.message ) );
        }
        // I transform the successful response, unwrapping the application data
        // from the API response payload.
        function handleSuccess( response ) {
            return( response );
        }
    })
    app.controller('EventController', function($scope,dataService,apiService,$window,$filter,$http,$timeout,$location,$rootScope){

        $scope.prev_filter = true;
        $scope.mob_price = 0;
        $scope.mob_price_a = false;
        $scope.mob_price_b = false;
        $scope.mob_price_c = false;
        $scope.mob_price_d = false;
        
        $scope.mob_price_a_real = false;
        $scope.mob_price_b_real = false;
        $scope.mob_price_c_real = false;
        $scope.mob_price_d_real = false;
        
        $scope.secH = [];
        
        $scope.mob_real_price = 0;
        $scope.price_filter = false;
        $scope.price_filter_down_limit = 0;
        $scope.price_filter_up_limit = 0;

        $rootScope.showHeader = false;
        $rootScope.windoWidth = window.innerWidth;
        
        $scope.filterPriceFn = function(_ele) {
            val = true;
            if($scope.price_filter == true){
                val = false;
                
                if($scope.mob_price_a_real) {
                    $scope.price_filter_down_limit = 0;
                    $scope.price_filter_up_limit = 100;
                    if( _ele.retail_price > $scope.price_filter_down_limit && _ele.retail_price <= $scope.price_filter_up_limit ) {
                        val =  true;
                    }
                }
                
                if($scope.mob_price_b_real){
                    $scope.price_filter_down_limit = 100;
                    $scope.price_filter_up_limit = 200;
                    if( _ele.retail_price > $scope.price_filter_down_limit && _ele.retail_price <= $scope.price_filter_up_limit ) {
                        val =  true;
                    }
                }
                
                if($scope.mob_price_c_real){
                    $scope.price_filter_down_limit = 200;
                    $scope.price_filter_up_limit = 300;
                    if( _ele.retail_price > $scope.price_filter_down_limit && _ele.retail_price <= $scope.price_filter_up_limit ) {
                        val =  true;
                    }
                }
                
                if($scope.mob_price_d_real){
                    $scope.price_filter_down_limit = 300;
                    $scope.price_filter_up_limit = 99999999999999999999999;
                    if( _ele.retail_price > $scope.price_filter_down_limit && _ele.retail_price <= $scope.price_filter_up_limit ) {
                        val =  true;
                    }
                }
            }
            else {
                val = true;
            }
            
            return val;
        }
        
        $scope.filterSectionsFn = function(_ele) {
            var _result = false;
            if($scope.selectedSections.length > 0){
                var indexSection = 0;
                for(indexSection = 0; indexSection < $scope.selectedSections.length; indexSection++){
                    if( _ele.section.indexOf( $scope.selectedSections[indexSection] ) != -1){
                        _result = true;
                        break;
                    }
                    else {
                        _result = false;
                    }
                }
            }
            else {
                _result = true;
            }
            
            return _result;
        }
        
        $scope.getEventInfo = function(){
            return apiService.getData('/api/v1/events/'+<%= params[:id] %>)
                .then(function(response){
                    console.log("Event");
                    console.log(response);
                    $scope.event  = response;
                    $rootScope.title = $scope.event.name + " Tickets | Gamehedge";
                    $rootScope.description = "Buy and Save up to 60% on all game tickets. If the home team losses by "+$scope.event.home_performer.sport.ggg+" or more, get 50% of your ticket price back.";
                    if($scope.event.is_active == false){
                        $location.path("/");
                    }
                    else{
                        $scope.getTicketList();
                        $(".intro-full").addClass("hidden2"); 
                    }
            });
        };
        
        $scope.filter_active = false;
        
        $scope.openFilter = function() {
            $scope.filter_active = true;
        }
        
        $scope.closeFilter = function() {
            $scope.filter_active = false;
            
            $scope.mob_index = $scope.index;
            $scope.mob_eticket = $scope.etickets;
            
            if($scope.onlyParking == false){
                $scope.mob_delivery = 0;
            }
            else {
                $scope.mob_delivery = 1;
            }
            
            $scope.mob_price_a = $scope.mob_price_a_real;
            $scope.mob_price_b = $scope.mob_price_b_real;
            $scope.mob_price_c = $scope.mob_price_c_real;
            $scope.mob_price_d = $scope.mob_price_d_real;
        }

        $scope.updateFilter = function(index){
            $scope.index = index;
            $scope.prev_filter = false;
            $scope.mob_index = index;
            $('#tickets_list').scrollTop(-200);
            $scope.filterEventsData();
            //$scope.showing_list = 20;
        }

        $scope.closePrevFilter = function() {
            $scope.prev_filter = false;
        }
        
        $scope.updateMobFilter = function(index){
            $scope.mob_index = index;
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }
        
        $scope.updateMobDelivery = function(index) {
            $scope.mob_delivery = index;
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }
        
        $scope.updateMobEticket = function(index) {
            $scope.mob_eticket = !$scope.mob_eticket;
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }
        
        $scope.mob_price_update = function(_val) {
            switch(_val) {
                case 1: $scope.mob_price_a = !$scope.mob_price_a;
                        break;
                case 2: $scope.mob_price_b = !$scope.mob_price_b;
                        break;
                case 3: $scope.mob_price_c = !$scope.mob_price_c;
                        break;
                case 4: $scope.mob_price_d = !$scope.mob_price_d;
                        break;
            }
            //$scope.mob_price = _val;
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }
        
        $scope.mob_price_update_real = function(_val) {
            switch(_val) {
                case 1: $scope.mob_price_a_real = !$scope.mob_price_a_real;
                        break;
                case 2: $scope.mob_price_b_real = !$scope.mob_price_b_real;
                        break;
                case 3: $scope.mob_price_c_real = !$scope.mob_price_c_real;
                        break;
                case 4: $scope.mob_price_d_real = !$scope.mob_price_d_real;
                        break;
            }
            
            if($scope.mob_price_a_real == false && $scope.mob_price_b_real == false && $scope.mob_price_c_real == false && $scope.mob_price_d_real == false) {
                $scope.price_filter = false;
            }
            else {
                $scope.price_filter = true;
            }
            
            //$scope.mob_price = _val;
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
            $scope.filterEventsData();
        }
        
        $scope.showMobFilters = function() {
            $scope.index = $scope.mob_index;
            
            $scope.etickets = $scope.mob_eticket;
            
            switch($scope.mob_delivery){
                case 0: $scope.onlyParking = false;
                        break;
                case 1: $scope.onlyParking = true;
                        break;
            }
            //console.log($scope.mob_delivery);
            //console.log($scope.etickets);
            $scope.filter_active = false;
            
            $scope.mob_price_a_real = $scope.mob_price_a;
            $scope.mob_price_b_real = $scope.mob_price_b;
            $scope.mob_price_c_real = $scope.mob_price_c;
            $scope.mob_price_d_real = $scope.mob_price_d;
            
            //console.log($scope.mob_price);
            
            if($scope.mob_price_a == false && $scope.mob_price_b == false && $scope.mob_price_c == false && $scope.mob_price_d == false) {
                $scope.price_filter = false;
            }
            else {
                $scope.price_filter = true;
            }
            $scope.filterEventsData();
        }
        
        $scope.displayDetail = false;
        
        $scope.selectedTicket = null;
        
        $scope.showDetail = function(_amount, _ticket){
            $scope.displayDetail = true;
            $scope.selectedTicket = _ticket;
            
            $("#MapContainer").tuMap("HighlightSection", _ticket.section);
        }
        
        $scope.goToCheckout = function(){
            $scope.redirect($scope.selectedTicket.amount, $scope.selectedTicket.id);
        }
        
        $scope.closeDetail = function(){
            $scope.displayDetail = false;
        }
        
        $scope.updateSort = function(sort){
            if(sort == $scope.ordering.replace("-","")){
                if($scope.ordering.indexOf("-") == -1){
                    $scope.ordering = "-"+sort
                }
                else{
                    $scope.ordering = sort
                }
            }
            else{
                $scope.ordering = sort
            }
            var reA = /[^a-zA-Z]/g;
            var reN = /[^0-9]/g;
            var htm = $('.listing-row').sort(function (a1, b1) {
                var a = "";
                var b = "";
                if($scope.ordering.indexOf("section") != -1){
                    a = $(a1).attr('data-section');
                    b = $(b1).attr('data-section');
                }
                else if($scope.ordering.indexOf("row") != -1){
                    a = $(a1).attr('data-row');
                    b = $(b1).attr('data-row');
                }
                else if($scope.ordering.indexOf("retail_price") != -1){
                    a = $(a1).attr('data-price');
                    b = $(b1).attr('data-price');
                }
                var aA = a.replace(reA, "");
                var bA = b.replace(reA, "");
                if($scope.ordering.indexOf("-") == -1){
                    if(aA === bA) {
                    var aN = parseInt(a.replace(reN, ""), 10);
                        var bN = parseInt(b.replace(reN, ""), 10);
                        return aN === bN ? 0 : aN > bN ? 1 : -1;
                    } else {
                        return aA > bA ? 1 : -1;
                    }
                }
                else{
                    if(aA === bA) {
                    var aN = parseInt(a.replace(reN, ""), 10);
                        var bN = parseInt(b.replace(reN, ""), 10);
                        return aN === bN ? 0 : aN > bN ? -1 : 1;
                    } else {
                        return aA > bA ? -1 : 1;
                    }
                }
            })
            $('#tickets_list').html(htm);
            $timeout(function () {
                $('[data-toggle="tooltip"]').tooltip();
                // $('.listing-row').mouseover($scope.higlightSection($(this).attr('data-section'), true));
                $('.listing-row').mouseover(function(){
                    $("#MapContainer").tuMap("HighlightSection",$(this).attr('data-section'));
                });
                $('.listing-row').mouseleave(function(){
                    $("#MapContainer").tuMap("ResetSection",$(this).attr('data-section'));
                });
                $('.redirect-button').click(function(){
                    var vid = $(this).parents().eq('2').attr('data-id');
                    var val = $(this).parents().eq('2').find('select').val()
                    window.location.href = '/orders/'+vid+"?amount="+val;
                });
            }, 100);
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }

        $scope.updateEtickets = function(){
            $scope.etickets = !$scope.etickets;
            
            $('#tickets_list').scrollTop(-200);
            //$scope.showing_list = 20;
        }

        $scope.updateParking = function(ids){
            $scope.onlyParking = ids;
            $('#tickets_list').scrollTop(-200);
             $scope.filterEventsData();
            //$scope.showing_list = 20;
        }

        $scope.getTicketList = function(){

            
            $http({
                method: 'GET',
                url: '/tickets/list/?id='+<%= params[:id] %>,
            }).then(function successCallback(response) {
                $scope.tickets = response.data.ticket_groups;
                $scope.loading = false;
                // console.log($scope.tickets);
                var sections = [];
                angular.forEach($scope.tickets , function(value, key) {
                    value.amount = value.splits[value.splits.length-1];
                    if(sections.indexOf(value.section) == -1){
                        sections.push(value.section);
                        $scope.Data.push({"section":value.section,"price":0,"quantity":1});
                    }   
                });
                $scope.fillEventsData();
            }, function errorCallback(response) {
                //console.log(response);
                // called asynchronously if an error occurs
                // or server returns response with an error status.
            });
        }

        $scope.fillEventsData = function(){
            var htm = "";
            var list = $scope.tickets;
            var select_list = "";
            for(i=0;i<list.length;i++){
                select_list = "";
                var amount = list[i].splits.reverse();
                for(j=0;j<amount.length;j++){
                    select_list += '<option value="'+amount[j]+'">'+amount[j]+'</option>'
                }
                if(list[i].public_notes == null || list[i].public_notes.split(' ').join('') == "" || list[i].public_notes == undefined){
                    htm += '<div class="row listing-row" data-info="'+amount+'" data-section="'+list[i].section+'" data-row="'+list[i].row+'" data-price="'+list[i].retail_price+'" data-type="'+list[i].type+'" data-id="'+list[i].id+'"><div class="hidden-xs hidden-sm col-xs-1 info-ico vertical-center full-height"></div><div class="col-xs-3 col-md-3 vertical-center horizontal-center section full-height">'+list[i].section+'</div><div class="col-xs-2 vertical-center horizontal-center full-height">'+list[i].row+'</div><div class="col-xs-3 col-md-2 vertical-center horizontal-center full-height"><div class="select-container custom-select"><select value="list[i].amount">+'+select_list+'</select></div></div><div class="col-xs-4 vertical-center horizontal-center buy-btn full-height"><span class="buy-btn-span"><button class="redirect-button">$'+list[i].retail_price+'/ea</button><p class="format">'+list[i].format+'</span></div></div>'
                }
                else{
                    htm +='<div class="row listing-row"  data-info="'+amount+'" data-section="'+list[i].section+'" data-row="'+list[i].row+'" data-price="'+list[i].retail_price+'" data-type="'+list[i].type+'" data-id="'+list[i].id+'"><div class="hidden-xs hidden-sm col-xs-1 info-ico vertical-center full-height"><span aria-hidden="true" data-toggle="tooltip" data-placement="right" title="'+list[i].public_notes+'"><img src="'+info_url+'" alt="info" /></span></div><div class="col-xs-3 col-md-3 vertical-center horizontal-center section full-height">'+list[i].section+'</div><div class="col-xs-2 vertical-center horizontal-center full-height">'+list[i].row+'</div><div class="col-xs-3 col-md-2 vertical-center horizontal-center full-height"><div class="select-container custom-select"><select value="list[i].amount">+'+select_list+'</select></div></div><div class="col-xs-4 vertical-center horizontal-center buy-btn full-height"><span class="buy-btn-span"><button class="redirect-button">$'+list[i].retail_price+'/ea</button><p class="format">'+list[i].format+'</span></div></div>'
                }
            }
            $('#tickets_list').html(htm);
            $timeout(function () {
                $('[data-toggle="tooltip"]').tooltip();
                // $('.listing-row').mouseover($scope.higlightSection($(this).attr('data-section'), true));
                $('.listing-row').mouseover(function(){
                    $("#MapContainer").tuMap("HighlightSection",$(this).attr('data-section'));
                });
                $('.listing-row').mouseleave(function(){
                    $("#MapContainer").tuMap("ResetSection",$(this).attr('data-section'));
                });
                $('.redirect-button').click(function(){
                    var vid = $(this).parents().eq('2').attr('data-id');
                    var val = $(this).parents().eq('2').find('select').val()
                    window.location.href = '/orders/'+vid+"?amount="+val;
                });
            }, 100);
            $scope.filterEventsData();
            $scope.loadMap();
        }

        $scope.relocateURL = function(id,val){
            $location.search('amount', val);
            $location.path('/order/'+id);
            $scope.applyChanges();
        }

        $scope.filterEventsData = function(){
            $('.listing-row').removeClass('hidden');
            $('.listing-row').each(function(){
                if($scope.selectedSections.length > 0){
                    var a = "";
                    var b = "";
                    for(i=0;i<$scope.selectedSections.length;i++){
                        a = $(this).attr('data-section').replace(/[^0-9]/g, '');
                        b = $scope.selectedSections[i].replace(/[^0-9]/g, '');
                        if(a != b){
                            $(this).addClass("hidden");
                        }
                        else{
                            $(this).removeClass("hidden");
                            break;
                        }
                    }
                }
                if($scope.onlyParking == true){
                    if($(this).attr('data-type') == 'event'){
                        $(this).addClass("hidden");
                    }
                }
                else{
                    if($(this).attr('data-type') == 'parking'){
                        $(this).addClass("hidden");
                    }
                }
            });
            if($scope.index != 0){
                $('.listing-row').each(function(){
                    if($scope.index == 5){
                        if(Number($(this).attr('data-info').split(',')[0]) < $scope.index){
                            $(this).addClass("hidden");
                        }
                    }
                    else{
                        if($(this).attr('data-info').split(',').indexOf(String($scope.index)) == -1){
                            $(this).addClass("hidden");
                        }    
                    }
                });
            }
            if($scope.price_filter == true){
                $('.listing-row').each(function(){
                    var val = false;
                    if($scope.mob_price_a_real) {
                        $scope.price_filter_down_limit = 0;
                        $scope.price_filter_up_limit = 100;
                        if(Number($(this).attr('data-price')) > $scope.price_filter_down_limit && Number($(this).attr('data-price')) <= $scope.price_filter_up_limit ) {
                            val =  true;
                        }
                    }
                    
                    if($scope.mob_price_b_real){
                        $scope.price_filter_down_limit = 100;
                        $scope.price_filter_up_limit = 200;
                        if( Number($(this).attr('data-price')) > $scope.price_filter_down_limit && Number($(this).attr('data-price')) <= $scope.price_filter_up_limit ) {
                            val =  true;
                        }
                    }
                    
                    if($scope.mob_price_c_real){
                        $scope.price_filter_down_limit = 200;
                        $scope.price_filter_up_limit = 300;
                        if( Number($(this).attr('data-price')) > $scope.price_filter_down_limit && Number($(this).attr('data-price')) <= $scope.price_filter_up_limit ) {
                            val =  true;
                        }
                    }
                    
                    if($scope.mob_price_d_real){
                        $scope.price_filter_down_limit = 300;
                        $scope.price_filter_up_limit = 99999999999999999999999;
                        if( Number($(this).attr('data-price')) > $scope.price_filter_down_limit && Number($(this).attr('data-price')) <= $scope.price_filter_up_limit ) {
                            val =  true;
                        }
                    }
                    if(val == false){
                        $(this).addClass("hidden");
                    }
                });
            }
        }

        $scope.higlightSection = function(section,highlight){
            if(section != undefined){
                if(highlight == true){
                    $("#MapContainer").tuMap("HighlightSection",section);
                }
                else{
                    $("#MapContainer").tuMap("ResetSection",section);
                }
            }
        }

        $scope.loadMap = function(){
            var date = $filter('date')($scope.event.occurs_at, 'yyyy-MM-ddTHH:mm','UTC');
            //console.log($scope.Data);
            $("#MapContainer").tuMap({
                EventInfo: {
                    Venue: $scope.event.venue.name,
                    EventName: $scope.event.name,
                    EventDate: date
                }
                , MapType: "Interactive"
                , EnableTooltipSectionView:false
                , SingleSectionSelection:false
                , AdaptiveThreshold: 0.8
                , Tickets: $scope.Data
                , ColorScheme: 1
                , ZoomLevel: 7
                , ControlsPosition:"Inside"
                , ServiceUrl: "https://imap.ticketutils.net"
                , FailoverMapUrl: "https://static.ticketutils.com/Charts/No-Seating-Chart.jpg"
                , OnError: function (e, Error) {
                    //alert(JSON.stringify(e));
                    //alert(JSON.stringify(Error));
                    //console.log(Error);
                    if (Error.Code == 0) {
                        var Message = "<div style=\"padding:10px;\">";
                        Message += "<span style=\"color:red;font-weight:bold;\">This Sample is Configured to run under host 'localhost'</span>";
                        Message += "<br />";
                        Message += "Please configure IIS/Apache or Compatible Web Server to point 'demo' folder in order to view the Sample. If you intend to Run it under different Domain, please contact TicketUtils Support for Activation";
                        Message += "</div>";
                        $("#MapContainer").html(Message);
                    }
                    else if(Error.Code == 1){
                        $("#MapContainer").html("");
                        $("#static_seating_chart").show();
                    }
                }
                , OnClick:function(e,Section){
                    if(Section.Active && Section.Selected){
                        $scope.filterBySection = true;
                        $scope.section = Section.Name;
                        $scope.selectedSections.push(Section.Name);
                        console.log($scope.selectedSections);
                        if(Section.SectionViewAvailable){
                            $scope.sectionUrl = Section.SectionViewUrl;
                        }
                        else{
                            $scope.sectionUrl ="";
                        }
                        $scope.applyChanges();
                    }
                    else if(Section.Active == true && Section.Selected == false) {
                        var _indexDel = $scope.selectedSections.indexOf(Section.Name);
                        $scope.selectedSections.splice(_indexDel, 1);
                    }
                     $scope.filterEventsData();
                    //console.log($scope.selectedSections);
                    
                }
                , OnReset: function () {
                    $scope.filterBySection = false;
                    $scope.section = "";
                    $scope.selectedSections = [];
                    $scope.sectionUrl = "";
                    $scope.applyChanges();
                    $("#MapContainer").tuMap("RemoveMapControl","Unmapped");
                    $("#MapContainer").tuMap("RemoveMapControl","Parking");
                    $("#MapContainer").tuMap("RemoveMapControl","Tailgate");
                     $scope.filterEventsData();   
                }
                , OnMouseover:function(e,Section){
                    if(Section.Active) {    
                        
                    }
                }
                , OnInit:function(e,Data){
                    //console.log(e);
                    //console.log(Data);
                }
                , TooltipFormatter:function(Data){
                    var Code = "";
                    Code += "Section " + Data.LongName
                    return Code;
                }
            });

            $timeout(function () {
                $("#MapContainer").tuMap("RemoveMapControl","Unmapped");
                $("#MapContainer").tuMap("RemoveMapControl","Parking");
                $("#MapContainer").tuMap("RemoveMapControl","Tailgate");
            },1000);
        };

        $scope.compareDates = function(event_date,format){
            if(format == "Physical"){
                if(moment().add(72,'h').isAfter(event_date.replace("Z",""))){
                    return false;
                }
                else{
                    return true;
                }
            }
            else{
                return true;
            }
        }

        $scope.applyChanges = function(){
            $scope.$apply()
        };

        $scope.zoomIn = function(){
            var Result=$("Selector").tuMap("ZoomIn");
        }

        $scope.zoomOut = function(){
            var Result=$("Selector").tuMap("ZoomOut");
        }

        $scope.redirect = function(amount,id) {
            //var amount = $($event.currentTarget).parent().parent().parent().find("select").val();
            var url = '/order/'+id+'?amount='+String(amount);
            //console.log(url);
            $location.url(url);
        };

        var delay = 200;
        var _timeout = null;
        
        $("#tickets_list").scroll(function() {
            
            var first = null;
                    
            $("#tickets_list > div").removeClass("row-selected");

            console.log($("#tickets_list").scrollTop());

            var ini_element = parseInt($("#tickets_list").scrollTop() / 60) - 2;
            if(ini_element < 0){
                ini_element = 0
            }

            for(var xx = ini_element; xx < $("#tickets_list > div").not(".hidden").length; xx++){
                var _this = $("#tickets_list > div").not(".hidden")[xx];

                if( isScrolledIntoView($(_this)) && !first) {
                    first = $(_this);
                    first.addClass("row-selected");

                    if($scope.secH.length > 0){
                        for(var u = 0; u < $scope.secH.length; u++){
                            if($scope.secH[u].toString().indexOf( $(_this).data("section").toString() ) == -1){
                                $("#MapContainer").tuMap("ResetSection", $scope.secH[u].toString() );
                            }
                        }
                    }

                    $scope.secH = [];

                    $("#MapContainer").tuMap("HighlightSection", $(_this).data("section").toString() );

                    $scope.secH.push( $(_this).data("section").toString() );

                    //console.log($scope.secH);
                    break;

                }            

            }
            
        });
        
        function isScrolledIntoView(elem) {
            var docViewTop = $("#tickets_list").scrollTop();
            var docViewBottom = docViewTop + $("#tickets_list").height();

            var elemTop = $(elem).position().top;
            var elemBottom = elemTop + $(elem).height();

            return ((elemBottom <= docViewBottom) && (elemTop > -30));
        }  

        $scope.showMore = function(){
            // //$scope.showing_list = //$scope.showing_list + 20;
        }

        $scope.$on('LastRepeaterElement', function(){
            //console.log('good to go');
            $timeout(function () {
                $('[data-toggle="tooltip"]').tooltip();
            }, 1000);
        });

        $scope.getEventInfo();
        //$scope.showing_list = 20;
        $scope.Data = [];
        $scope.filterBySection = false;
        $scope.section = "";
        $scope.selectedSections = [];
        $scope.loading = true;
        $scope.sectionUrl = "";
        $scope.onlyParking = false;
        $scope.index = 0;
        $scope.mob_index = 0;
        $scope.mob_delivery = 0;
        $scope.mob_eticket = false;
        $scope.ordering = 'retail_price';
        $scope.etickets = false;
        $scope.physicals = false;
        $rootScope.isOrder = false;
        $rootScope.isEvent = true;
        $rootScope.darkHeader = true;
        $rootScope.noFooter = true;
        $scope.searchTerm = "";
        $scope.compareDate =  "2015-09-05T00:00:00.000Z"
        $window.scrollTo(0, 0);
        //The global variable locat gets the current location.path
        
    })
    
</script>

